<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:Bonsai.uEye;assembly=Bonsai.uEye"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p2="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:p3="clr-namespace:;assembly=Extensions"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Camera</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="LowResCam" />
              <Property Name="ConfigFile" DisplayName="LowResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>1</p1:DeviceId>
                <p1:ConfigFile>C:\Users\Utilizador\Desktop\ueyeParameters700x700.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LowResCamera</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Transformation Matrixes</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="PX2MM" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>..\resources\VRData\VRConversions\PX2MM.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>PX2MM</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>MagnetControl</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:CreateSerialPort">
                <io:Name>MagnetCOM</io:Name>
                <io:PortName>COM3</io:PortName>
                <io:BaudRate>115200</io:BaudRate>
                <io:Parity>None</io:Parity>
                <io:ParityReplace>63</io:ParityReplace>
                <io:DataBits>8</io:DataBits>
                <io:StopBits>One</io:StopBits>
                <io:Handshake>None</io:Handshake>
                <io:DiscardNull>false</io:DiscardNull>
                <io:DtrEnable>false</io:DtrEnable>
                <io:RtsEnable>false</io:RtsEnable>
                <io:ReadBufferSize>4096</io:ReadBufferSize>
                <io:WriteBufferSize>2048</io:WriteBufferSize>
                <io:ReceivedBytesThreshold>1</io:ReceivedBytesThreshold>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:SerialStringRead">
                <io:PortName>MagnetCOM</io:PortName>
                <io:NewLine>\n</io:NewLine>
              </Combinator>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>G21 G92 X0 Y0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:SerialStringWrite">
          <io:PortName>MagnetCOM</io:PortName>
          <io:NewLine>\n</io:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>SetMagnetHome</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>GenerateProtocolSequence</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="DateTimeProperty">
                <Value>0001-01-01T00:00:00</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="Speed3" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="Speed2" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="Speed1" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="TrialCount" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Count" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Add">
              <Operand xsi:type="IntProperty">
                <Value>-1</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Upper" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:CreateDiscreteUniform">
                <p2:Lower>0</p2:Lower>
                <p2:Upper>0</p2:Upper>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:SampleDistinct">
                <p2:Count>1</p2:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>20</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>1</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>40</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>2</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>30</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="10" Label="Source1" />
            <Edge From="2" To="19" Label="Source2" />
            <Edge From="3" To="17" Label="Source2" />
            <Edge From="4" To="15" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="6" To="8" Label="Source1" />
            <Edge From="7" To="13" Label="Source2" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="8" To="10" Label="Source2" />
            <Edge From="9" To="12" Label="Source2" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="13" To="16" Label="Source1" />
            <Edge From="13" To="18" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="20" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="20" Label="Source2" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source3" />
            <Edge From="20" To="21" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>Trial</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Speed (mm/s)" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="TurnRadius (mm)" />
              <Property Name="StraightLength (mm)" />
              <Property Name="Direction (1 or -1)" />
              <Property Name="RootPath" />
              <Property Name="Date" />
              <Property Name="ProtocolName" />
              <Property Name="RedLED" />
              <Property Name="GreenLED" />
              <Property Name="RedOnFrames" />
              <Property Name="RedOffFrames" />
              <Property Name="GreenOnFrames" />
              <Property Name="GreenOffFrames" />
              <Property Name="Framerate" />
              <Property Name="LEDOption" />
              <Property Name="Duration (sec)" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>TrialParameters</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Speed (mm/s)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>20</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="TurnRadius (mm)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>12.5</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="StraightLength (mm)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>25</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Direction (1 or -1)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="RedLED" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="GreenLED" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="RedOnFrames" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>3</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="RedOffFrames" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>6</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="GreenOnFrames" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="GreenOffFrames" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>8</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Framerate" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>85</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="LEDOption" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Duration (sec)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>930</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1.Item1 as Speed,
it.Item1.Item2 as TurnRadius,
it.Item1.Item3 as StraightLength,
it.Item1.Item4 as Direction,
it.Item1.Item5 as Framerate,
it.Item1.Item6 as LEDOption,
it.Item1.Item7 as TrialDuration,
it.Item2.Item1 as RedLEDSwitch,
it.Item2.Item2 as RedOnFrames,
it.Item2.Item3 as RedOffFrames,
it.Item2.Item4 as GreenLEDSwitch,
it.Item2.Item5 as GreenOnFrames,
it.Item2.Item6 as GreenOffFrames)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="RootPath" />
                    <Property Name="Date" />
                    <Property Name="ProtocolName" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogPaths</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="RootPath" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>C:\Users\Utilizador\Desktop</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Date" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>20240404</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="ProtocolName" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>ParallelGreen</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Params</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Speed</Selector>
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}mms</Format>
                          <Selector>it</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}{2}{3}{4}</Format>
                          <Selector>Item1,Item2,Item3,Item4,Item5</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="16" Label="Source2" />
                        <Edge From="9" To="16" Label="Source1" />
                        <Edge From="10" To="16" Label="Source3" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="16" Label="Source4" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source5" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="27" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="27" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="27" Label="Source3" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="27" Label="Source4" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="20" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="20" Label="Source4" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="20" Label="Source2" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="20" Label="Source3" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="20" Label="Source5" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source6" />
                  <Edge From="20" To="28" Label="Source2" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="27" Label="Source5" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="27" Label="Source6" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source7" />
                  <Edge From="27" To="28" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="31" To="32" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Tracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LowResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Grayscale" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:CropCenter">
                      <cv:Size>
                        <cv:Width>320</cv:Width>
                        <cv:Height>320</cv:Height>
                      </cv:Size>
                      <cv:FillValue>
                        <cv:Val0>0</cv:Val0>
                        <cv:Val1>0</cv:Val1>
                        <cv:Val2>0</cv:Val2>
                        <cv:Val3>0</cv:Val3>
                      </cv:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:AdaptiveThreshold">
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:AdaptiveMethod>GaussianC</cv:AdaptiveMethod>
                      <cv:ThresholdType>BinaryInv</cv:ThresholdType>
                      <cv:BlockSize>21</cv:BlockSize>
                      <cv:Parameter>8</cv:Parameter>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>ConnectedComponent</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>10</cv:MinArea>
                      <cv:MaxArea>65</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>X</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Y</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Size.Width</Selector>
                  </Expression>
                  <Expression xsi:type="Divide">
                    <Operand xsi:type="IntProperty">
                      <Value>2</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>15</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>BinaryInv</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>5</cv:MinArea>
                      <cv:MaxArea>500</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>ConvertToMm</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>PX2MM</Name>
                          </Expression>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>X</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Y</Selector>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:WithLatestFrom" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="p3:UnitTransform" />
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>ConvertToPoint2f</ipy:Name>
                            <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="5" Label="Source2" />
                          <Edge From="1" To="2" Label="Source1" />
                          <Edge From="1" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="3" To="4" Label="Source2" />
                          <Edge From="4" To="5" Label="Source1" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="6" To="7" Label="Source1" />
                          <Edge From="7" To="8" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Fly)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Fly</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionExtremes">
                      <cv:Method>MajorAxis</cv:Method>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>FindHead</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

# Global Variables
centroid = Point2f(float(0),float(0))
head = Point2f(float(0),float(0))
tail = Point2f(float(0),float(0))
history = float(0)


def distancesquare(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return dx * dx + dy * dy

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

def cossimilarity(pt1,pt2):
  if (dotproduct(pt1,pt1)*dotproduct(pt2,pt2)) == 0:
    return float(1)
  else:
    return float(dotproduct(pt1,pt2)/(math.sqrt(dotproduct(pt1,pt1))*math.sqrt(dotproduct(pt2,pt2))))

def dotproduct(pt1,pt2):
  return pt1.X*pt2.X+pt1.Y*pt2.Y

@returns(Point2f)
def process(value):
    #Load Global Variables
    global centroid, head, tail, history
    
    pt1 = value.Item1
    pt2 = value.Item2
    pt3 = value.Item3
    d = distancesquare(centroid,pt1)

    if distancesquare(pt3, head) &lt; distancesquare(pt3, tail):
      aux = pt2
      pt2 = pt3
      pt3 = aux
    
    dCentroid = pt1 - centroid
    dHead = head - centroid
    if distancesquare(centroid,pt1) &gt; 1:
      cossim = cossimilarity(dCentroid,dHead)
      history = history + 0.2*cossim
    else:
      history = 1

    if history &lt; 0:
      aux = pt2
      pt2 = pt3
      pt3 = aux

    centroid = pt1
    head = pt2
    tail = pt3

    return head</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>ConvertToMm</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>PX2MM</Name>
                          </Expression>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>X</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Y</Selector>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:WithLatestFrom" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="p3:UnitTransform" />
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>ConvertToPoint2f</ipy:Name>
                            <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="5" Label="Source2" />
                          <Edge From="1" To="2" Label="Source1" />
                          <Edge From="1" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="3" To="4" Label="Source2" />
                          <Edge From="4" To="5" Label="Source1" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="6" To="7" Label="Source1" />
                          <Edge From="7" To="8" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>CalculateOrientation</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

@returns(float)
def process(value):
    centroid = value.Item1
    head = value.Item2
    orientation = angleline(centroid,head)
    return float(orientation)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Orientation)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Head)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Head</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:ConvertColor">
                      <cv:Conversion>Gray2Bgra</cv:Conversion>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Size.Width</Selector>
                  </Expression>
                  <Expression xsi:type="Divide">
                    <Operand xsi:type="IntProperty">
                      <Value>2</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Subtract">
                    <Operand xsi:type="IntProperty">
                      <Value>160</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Add">
                    <Operand xsi:type="FloatProperty">
                      <Value>190</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Add">
                    <Operand xsi:type="FloatProperty">
                      <Value>190</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>ConvertToPoint2f</ipy:Name>
                    <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>ConvertToMm</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>PX2MM</Name>
                          </Expression>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>X</Selector>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Y</Selector>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:WithLatestFrom" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="p3:UnitTransform" />
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>ConvertToPoint2f</ipy:Name>
                            <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="5" Label="Source2" />
                          <Edge From="1" To="2" Label="Source1" />
                          <Edge From="1" To="3" Label="Source1" />
                          <Edge From="2" To="4" Label="Source1" />
                          <Edge From="3" To="4" Label="Source2" />
                          <Edge From="4" To="5" Label="Source1" />
                          <Edge From="5" To="6" Label="Source1" />
                          <Edge From="6" To="7" Label="Source1" />
                          <Edge From="7" To="8" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Magnet)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Magnet</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p3:HeadVisualizer" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:MaskPolygon">
                      <cv:Regions>
                        <cv:ArrayOfPoint>
                          <cv:Point>
                            <cv:X>333</cv:X>
                            <cv:Y>25</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>370</cv:X>
                            <cv:Y>25</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>370</cv:X>
                            <cv:Y>55</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>333</cv:X>
                            <cv:Y>55</cv:Y>
                          </cv:Point>
                        </cv:ArrayOfPoint>
                      </cv:Regions>
                      <cv:MaskType>ToZero</cv:MaskType>
                      <cv:FillValue>
                        <cv:Val0>0</cv:Val0>
                        <cv:Val1>0</cv:Val1>
                        <cv:Val2>0</cv:Val2>
                        <cv:Val3>0</cv:Val3>
                      </cv:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>105</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>Binary</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>150</cv:MinArea>
                      <cv:MaxArea>10000</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Area</Selector>
                  </Expression>
                  <Expression xsi:type="GreaterThan">
                    <Operand xsi:type="DoubleProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as RedLED)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedLED</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:MaskPolygon">
                      <cv:Regions>
                        <cv:ArrayOfPoint>
                          <cv:Point>
                            <cv:X>483</cv:X>
                            <cv:Y>35</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>522</cv:X>
                            <cv:Y>35</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>522</cv:X>
                            <cv:Y>78</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>483</cv:X>
                            <cv:Y>78</cv:Y>
                          </cv:Point>
                        </cv:ArrayOfPoint>
                      </cv:Regions>
                      <cv:MaskType>ToZero</cv:MaskType>
                      <cv:FillValue>
                        <cv:Val0>0</cv:Val0>
                        <cv:Val1>0</cv:Val1>
                        <cv:Val2>0</cv:Val2>
                        <cv:Val3>0</cv:Val3>
                      </cv:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>105</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>Binary</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>650</cv:MinArea>
                      <cv:MaxArea>10000</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Area</Selector>
                  </Expression>
                  <Expression xsi:type="GreaterThan">
                    <Operand xsi:type="DoubleProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as GreenLED)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenLED</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Frame)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Frame</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>5085</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Framerate</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Divide">
                    <Operand xsi:type="IntProperty">
                      <Value>85</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as ElapsedTimeSec)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>ElapsedTimeSec</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Value.Item1 as Frame,
it.Value.Item2 as Fly,
it.Value.Item3 as Head,
it.Value.Item4 as Orientation,
it.Value.Item5 as Magnet,
it.Value.Item6.Item1 as RedLED,
it.Value.Item6.Item2 as GreenLED,
it.Timestamp as TimeTracking,
it.Value.Item7 as TimeAcquisition)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Fly</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="84" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="4" To="76" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="5" To="73" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="7" To="19" Label="Source1" />
                  <Edge From="7" To="39" Label="Source1" />
                  <Edge From="7" To="40" Label="Source1" />
                  <Edge From="7" To="54" Label="Source1" />
                  <Edge From="7" To="63" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="8" To="16" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="13" To="15" Label="Source1" />
                  <Edge From="14" To="44" Label="Source1" />
                  <Edge From="15" To="46" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="42" Label="Source2" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="22" To="27" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="23" To="52" Label="Source2" />
                  <Edge From="23" To="30" Label="Source1" />
                  <Edge From="24" To="33" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="85" Label="Source2" />
                  <Edge From="27" To="28" Label="Source1" />
                  <Edge From="27" To="29" Label="Source1" />
                  <Edge From="28" To="30" Label="Source2" />
                  <Edge From="29" To="30" Label="Source3" />
                  <Edge From="30" To="31" Label="Source1" />
                  <Edge From="31" To="32" Label="Source1" />
                  <Edge From="31" To="52" Label="Source3" />
                  <Edge From="32" To="33" Label="Source2" />
                  <Edge From="32" To="37" Label="Source1" />
                  <Edge From="33" To="34" Label="Source1" />
                  <Edge From="34" To="35" Label="Source1" />
                  <Edge From="35" To="36" Label="Source1" />
                  <Edge From="36" To="85" Label="Source4" />
                  <Edge From="37" To="38" Label="Source1" />
                  <Edge From="38" To="85" Label="Source3" />
                  <Edge From="39" To="52" Label="Source1" />
                  <Edge From="40" To="41" Label="Source1" />
                  <Edge From="41" To="42" Label="Source1" />
                  <Edge From="42" To="43" Label="Source1" />
                  <Edge From="42" To="45" Label="Source1" />
                  <Edge From="43" To="44" Label="Source2" />
                  <Edge From="44" To="47" Label="Source1" />
                  <Edge From="45" To="46" Label="Source2" />
                  <Edge From="46" To="47" Label="Source2" />
                  <Edge From="47" To="48" Label="Source1" />
                  <Edge From="48" To="49" Label="Source1" />
                  <Edge From="48" To="52" Label="Source4" />
                  <Edge From="49" To="50" Label="Source1" />
                  <Edge From="50" To="51" Label="Source1" />
                  <Edge From="51" To="85" Label="Source5" />
                  <Edge From="52" To="53" Label="Source1" />
                  <Edge From="54" To="55" Label="Source1" />
                  <Edge From="55" To="56" Label="Source1" />
                  <Edge From="56" To="57" Label="Source1" />
                  <Edge From="57" To="58" Label="Source1" />
                  <Edge From="58" To="59" Label="Source1" />
                  <Edge From="59" To="60" Label="Source1" />
                  <Edge From="60" To="61" Label="Source1" />
                  <Edge From="61" To="62" Label="Source1" />
                  <Edge From="62" To="72" Label="Source1" />
                  <Edge From="63" To="64" Label="Source1" />
                  <Edge From="64" To="65" Label="Source1" />
                  <Edge From="65" To="66" Label="Source1" />
                  <Edge From="66" To="67" Label="Source1" />
                  <Edge From="67" To="68" Label="Source1" />
                  <Edge From="68" To="69" Label="Source1" />
                  <Edge From="69" To="70" Label="Source1" />
                  <Edge From="70" To="71" Label="Source1" />
                  <Edge From="71" To="72" Label="Source2" />
                  <Edge From="72" To="85" Label="Source6" />
                  <Edge From="73" To="74" Label="Source1" />
                  <Edge From="74" To="75" Label="Source1" />
                  <Edge From="75" To="85" Label="Source1" />
                  <Edge From="76" To="77" Label="Source1" />
                  <Edge From="77" To="81" Label="Source1" />
                  <Edge From="78" To="79" Label="Source1" />
                  <Edge From="79" To="80" Label="Source1" />
                  <Edge From="80" To="81" Label="Source2" />
                  <Edge From="81" To="82" Label="Source1" />
                  <Edge From="82" To="83" Label="Source1" />
                  <Edge From="84" To="85" Label="Source7" />
                  <Edge From="85" To="86" Label="Source1" />
                  <Edge From="86" To="87" Label="Source1" />
                  <Edge From="87" To="88" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Stimuli</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Fly</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timer">
                      <rx:DueTime>PT0S</rx:DueTime>
                      <rx:Period>PT0.015S</rx:Period>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Elapsed Time Calculator</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Timestamp</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Subtract" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>TotalSeconds</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Frame</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Fly.X</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Fly.Y</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

# Global Variables (Outputs)
StimX = None                #Stimulus X Coordinate in Millimeters
StimY = None                #Stimulus Y Coordinate in Millimeters
StimOri = None              #Stimulus Orientation in Radians
state = None                #Stimulus State

# State Legend
# 99 - Initiation (Close Loop With Fly Center of Mass and Orientation)
# 0 - Straight Section
# -1/1 - Curved Section (signal indicates direction of the turn - left vs right)

# Global Protocol Variables
n = None                    #Counter for the amount straight steps the stimulus needs to do before entering a curved section(if this number is not whole it is corrected on the first step of the curved section)
m = None                    #Counter for the amount curved steps the stimulus needs to do before entering a straight section(if this number is not whole it is corrected on the first step of the straight section)
sign_straight = None        #Used to shift directions during the straight sections
sign_curve = None           #Used to shift rotation direction during the curves
switch = None               #Used to add or not pi to the angle used to determine the curved section stimulus position (1 adds pi / -1 does not add pi)
switch_counter = None       #Used to countdown the number of curved sections before the switch changes
yi = None                   #Sets the initial stimulus y coordinate for the curved sections. Important since the the position of the target during the curved sections is done relative to the initial position
ti = None                   #Saves Previous Time Point to Process dt
dt = None                   #Interval of time since last projected frame
counter = None


@returns(Tuple[float,float,float,float,float,bool,bool])
def process(value):
    #Load Global Variables
    global StimX, StimY, StimOri, n, m, state, sign_straight, sign_curve, switch, switch_counter, yi, ti, dt, counter

    # Initiate LEDs
    RedLEDSwitch = value.Item2.RedLEDSwitch
    GreenLEDSwitch = value.Item2.GreenLEDSwitch
    RedLED = bool(False)
    GreenLED = bool(False)

    # Close Loop Input
    FlyX = float(0) #value.Item1.Item3      #Tracked Fly X Coordinate in Millimeters
    FlyY = float(0) #value.Item1.Item4      #Tracked Fly Y Coordinate in Millimeters
    FlyOri = float(0) #value.Item1.Item5    #Tracked Fly Orientation in Radians
    
    # Open Loop Input
    t = value.Item1.Item1         #Elapsed time since the start of the experiment
    frame=value.Item1.Item2       #Current Frame from current section
    option = value.Item2.LEDOption #Protocol Option for LED (see start)
    fr = value.Item2.Framerate    #framerate of the camera
    duration = value.Item2.TrialDuration #In seconds
      
    # Protocol Specific Inputs
    speed=value.Item2.Speed       #Stimulus speed in Millimeters/Second
    r=value.Item2.TurnRadius      #Radius of the curved section
    l=value.Item2.StraightLength  #Length of the straight section
    sign=value.Item2.Direction    #Global direction (changes the entire protocol direction to the mirror image)


    # Protocol Algorithm -------------------------------   
    if ti is None:
      ti = t
      counter = 0
      dt = 0
      return Tuple.Create(float(value.Item1.Item2),float.NaN,float.NaN,float.NaN,float.NaN,RedLED,GreenLED)
    else:
      # Time Interval
      if counter &lt; 10:
        counter += 1
      dt = 0.015 #(dt*(counter-1)/counter)+(t - ti)/counter  #makes dt a pseudo-average insted of the actual interval
      #dt = t - ti                   
      ti = t
      # Protocol Constants
      dd = speed*dt                 #Amount of distance traveled by the stimulus in between projection frames
      halfl = l/2                   #Half of the length of the straight path (Used to keep the protocol centered and to know the starting X protision of the curved sections)     
      halfc = math.pi*r             #Perimeter of half a circle
      k = halfc/dd                  #Number of steps required to travel along the half circle perimeter
      # Protocol Logic
      if t &lt; 5:
        StimX = -sign*halfl
        StimY = 0
        StimOri = 0
        sign_straight = 1
        sign_curve = 1
        switch = -1
        switch_counter = 0
        state = 99
        n = None
      else:
        PrevX = StimX             #Saves Previous X value for the stimulus
        PrevY = StimY             #Saves Previous Y value for the stimulus
        if n is None:
          StimX = -sign*halfl
          StimY = 0
          n = l/dd
          m = 0
          state = 0
        elif (state==0 and n&gt;=1): 
          StimX += sign*sign_straight*dd
          n -= 1
        elif (n&lt;1 and (m+1)&lt;k):
          if m==0:
            m = (1-n)
            state = sign_curve*1
            yi = StimY
          else:
            m += 1
          vangle = sign_curve*(((1-m/k)*math.pi/2) + (1+switch)*math.pi/2)
          vlength = 2*r*math.sin((m/k)*math.pi/2) 
          StimX = sign*(sign_straight*halfl + vlength*math.sin(vangle))
          StimY = yi + vlength*math.cos(vangle)
        elif ((m+1)&gt;k):
          StimX = sign*sign_straight*(halfl - (1-(m+1-k))*dd)
          n = l/dd - (m+1-k)
          m = 0
          sign_straight = -sign_straight
          if (switch_counter==0):
            switch = -switch
            switch_counter = 2
          elif (switch_counter==1):
            sign_curve = -sign_curve
          switch_counter -= 1
          state = 0
        StimOri = math.atan2(StimY-PrevY, StimX-PrevX)
        
        # LED Control
        if (RedLEDSwitch):
          RedLED = bool(True);
        if (GreenLEDSwitch):
          if(option==1):
            halfn = l/(2*dd)
            halfk = k/2
            time1 = fr*(duration/3)
            time2 = fr*(duration*2/3)
            if(state==0 and n&lt;halfn and frame&gt;time1 and frame&lt;time2):
              GreenLED = bool(True);
            if(abs(state)==1 and m&gt;halfk and frame&gt;time2):
              GreenLED = bool(True);
      # In the output we have also value.Item1.Item5 which corresponds to the Low Resolution Frame number
      return Tuple.Create(float(value.Item1.Item2),float(StimX),float(StimY),float(StimOri),float(state),RedLED,GreenLED)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as LowResFrame,
it.Item2 as X,
it.Item3 as Y,
it.Item4 as Orientation,
it.Item5 as State,
it.Item6 as RedLED,
it.Item7 as GreenLED)
</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Stim</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source2" />
                  <Edge From="1" To="12" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="4" To="7" Label="Source1" />
                  <Edge From="4" To="8" Label="Source1" />
                  <Edge From="4" To="9" Label="Source1" />
                  <Edge From="4" To="10" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="11" Label="Source1" />
                  <Edge From="7" To="11" Label="Source2" />
                  <Edge From="8" To="11" Label="Source3" />
                  <Edge From="9" To="11" Label="Source4" />
                  <Edge From="10" To="11" Label="Source5" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Command</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>G21 G53 X0 Y0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timer">
                      <rx:DueTime>PT2S</rx:DueTime>
                      <rx:Period>PT0S</rx:Period>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Stim</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>X</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Y</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>BuildMoveCommand</scr:Name>
                    <scr:Expression>"G21 G53 X" + Item1.ToString() + " Y" + Item2.ToString()</scr:Expression>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SkipUntil" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="io:SerialStringWrite">
                      <io:PortName>MagnetCOM</io:PortName>
                      <io:NewLine>\n</io:NewLine>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Value.LowResFrame as LowResFrame,
it.Value.X as X,
it.Value.Y as Y,
it.Value.Orientation as Orientation,
it.Value.State as State,
it.Timestamp as TimeProjection)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Command</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedLED</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>RedLED</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenLED</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>GreenLED</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="9" Label="Source1" />
                  <Edge From="2" To="8" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="3" To="5" Label="Source1" />
                  <Edge From="3" To="11" Label="Source2" />
                  <Edge From="3" To="16" Label="Source1" />
                  <Edge From="3" To="18" Label="Source1" />
                  <Edge From="4" To="6" Label="Source1" />
                  <Edge From="5" To="6" Label="Source2" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source2" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Logging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogFly</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Fly_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Fly</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Utilizador\Desktop\20240306\RecombinantLC10aTest20mms_Fly_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogStim</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Stim_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Command</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Utilizador\Desktop\20240306\RecombinantLC10aTest20mms_Stim_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogVideo</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LowResCamera</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_CamL_.avi</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:VideoWriter">
                            <cv:FileName>C:\Users\Utilizador\Desktop\20240306\RecombinantLC10aTest20mms_CamL_.avi</cv:FileName>
                            <cv:Suffix>FileCount</cv:Suffix>
                            <cv:Buffered>true</cv:Buffered>
                            <cv:Overwrite>false</cv:Overwrite>
                            <cv:FourCC>FMP4</cv:FourCC>
                            <cv:FrameRate>85</cv:FrameRate>
                            <cv:FrameSize>
                              <cv:Width>0</cv:Width>
                              <cv:Height>0</cv:Height>
                            </cv:FrameSize>
                            <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                          </Combinator>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="6" Label="Source1" />
                        <Edge From="1" To="3" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source3" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>LEDArduino</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RedLED</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GreenLED</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedOnFrames</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>3</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedOffFrames</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>6</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

# Global Variables (Outputs)
counter = None
outOpt = None#
option = None

@returns(bool)
def process(value):

    #Load Global Variables
    global counter, outOpt, option

    defOpt = value.Item1       
    on = value.Item2.Item1
    off = value.Item2.Item2

    if counter is None:
      outOpt = defOpt
      counter = on
      option = 1
    else:
      if (option == 1 and counter == 0):
        outOpt = bool(False)
        counter = off
        option = 0
      elif (option == 0 and counter == 0):
        outOpt = defOpt
        counter = on
        option = 1
    counter -= 1
    if counter &lt; 0:
      counter = 0
    return outOpt
</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ard:DigitalOutput">
                      <ard:PortName>COM4</ard:PortName>
                      <ard:Pin>2</ard:Pin>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenOnFrames</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenOffFrames</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>8</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

# Global Variables (Outputs)
counter = None
outOpt = None#
option = None

@returns(bool)
def process(value):

    #Load Global Variables
    global counter, outOpt, option

    defOpt = value.Item1       
    on = value.Item2.Item1
    off = value.Item2.Item2

    if counter is None:
      outOpt = defOpt
      counter = on
      option = 1
    else:
      if (option == 1 and counter == 0):
        outOpt = bool(False)
        counter = off
        option = 0
      elif (option == 0 and counter == 0):
        outOpt = defOpt
        counter = on
        option = 1
    counter -= 1
    if counter &lt; 0:
      counter = 0
    return outOpt
</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ard:DigitalOutput">
                      <ard:PortName>COM4</ard:PortName>
                      <ard:Pin>8</ard:Pin>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="10" Label="Source1" />
                  <Edge From="1" To="20" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="6" Label="Source1" />
                  <Edge From="2" To="13" Label="Source1" />
                  <Edge From="2" To="16" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="9" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source2" />
                  <Edge From="9" To="10" Label="Source2" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="19" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source2" />
                  <Edge From="19" To="20" Label="Source2" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>CloseTrial</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timer">
                      <rx:DueTime>PT0S</rx:DueTime>
                      <rx:Period>PT1S</rx:Period>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>TrialDuration</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Count" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Skip">
                      <rx:Count>60</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="3" Label="Source1" />
            <Edge From="2" To="3" Label="Source2" />
            <Edge From="9" To="10" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT2S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>G21 G53 X0 Y0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:SerialStringWrite">
          <io:PortName>MagnetCOM</io:PortName>
          <io:NewLine>\n</io:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>ReturnMagnetHome</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>false</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM4</ard:PortName>
          <ard:Pin>2</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>false</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM4</ard:PortName>
          <ard:Pin>8</ard:Pin>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="13" To="16" Label="Source1" />
      <Edge From="13" To="18" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>