<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:Bonsai.uEye;assembly=Bonsai.uEye"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:p2="clr-namespace:;assembly=Extensions"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Camera</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="LowResCam" />
              <Property Name="ConfigFile" DisplayName="LowResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>1</p1:DeviceId>
                <p1:ConfigFile>C:\Users\Utilizador\Desktop\ueyeParameters700x700.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LowResCamera</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Transformation Matrixes</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="PX2MM" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\Users\Utilizador\Desktop\MagnetConversions\PX2MM.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>PX2MM</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>MagnetControl</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:CreateSerialPort">
                <io:Name>MagnetCOM</io:Name>
                <io:PortName>COM3</io:PortName>
                <io:BaudRate>115200</io:BaudRate>
                <io:Parity>None</io:Parity>
                <io:ParityReplace>63</io:ParityReplace>
                <io:DataBits>8</io:DataBits>
                <io:StopBits>One</io:StopBits>
                <io:Handshake>None</io:Handshake>
                <io:DiscardNull>false</io:DiscardNull>
                <io:DtrEnable>false</io:DtrEnable>
                <io:RtsEnable>false</io:RtsEnable>
                <io:ReadBufferSize>4096</io:ReadBufferSize>
                <io:WriteBufferSize>2048</io:WriteBufferSize>
                <io:ReceivedBytesThreshold>1</io:ReceivedBytesThreshold>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:SerialStringRead">
                <io:PortName>MagnetCOM</io:PortName>
                <io:NewLine>\n</io:NewLine>
              </Combinator>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>G21 G92 X0 Y0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:SerialStringWrite">
          <io:PortName>MagnetCOM</io:PortName>
          <io:NewLine>\n</io:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>SetMagnetHome</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>Trial</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="RedLED" />
              <Property Name="GreenLED" />
              <Property Name="Framerate" />
              <Property Name="LEDOption" />
              <Property Name="Duration (sec)" />
              <Property Name="RootPath" />
              <Property Name="Date" />
              <Property Name="ProtocolName" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>TrialParameters</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="RedLED" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="GreenLED" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>false</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Framerate" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>85</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="LEDOption" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Duration (sec)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>600</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1.Item1 as Framerate,
it.Item1.Item2 as LEDOption,
it.Item1.Item3 as TrialDuration,
it.Item2.Item1 as RedLEDSwitch,
it.Item2.Item2 as GreenLEDSwitch)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="RootPath" />
                    <Property Name="Date" />
                    <Property Name="ProtocolName" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogPaths</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="RootPath" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>C:\Users\Utilizador\Desktop</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Date" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>20240618</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="ProtocolName" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>WhiteRedLEDMax</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}{2}{3}</Format>
                          <Selector>Item1,Item2,Item3,Item4</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="13" Label="Source2" />
                        <Edge From="9" To="13" Label="Source1" />
                        <Edge From="10" To="13" Label="Source3" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source4" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="12" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="11" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="11" Label="Source2" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source3" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Tracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LowResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Grayscale" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>15</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>BinaryInv</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>3</cv:MinArea>
                      <cv:MaxArea>500</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p2:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="5" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="4" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Fly)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Fly</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionExtremes">
                      <cv:Method>MajorAxis</cv:Method>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>FindHead</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

# Global Variables
centroid = Point2f(float(0),float(0))
head = Point2f(float(0),float(0))
tail = Point2f(float(0),float(0))
history = float(0)


def distancesquare(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return dx * dx + dy * dy

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

def cossimilarity(pt1,pt2):
  if (dotproduct(pt1,pt1)*dotproduct(pt2,pt2)) == 0:
    return float(1)
  else:
    return float(dotproduct(pt1,pt2)/(math.sqrt(dotproduct(pt1,pt1))*math.sqrt(dotproduct(pt2,pt2))))

def dotproduct(pt1,pt2):
  return pt1.X*pt2.X+pt1.Y*pt2.Y

@returns(Point2f)
def process(value):
    #Load Global Variables
    global centroid, head, tail, history
    
    pt1 = value.Item1
    pt2 = value.Item2
    pt3 = value.Item3
    d = distancesquare(centroid,pt1)

    if distancesquare(pt3, head) &lt; distancesquare(pt3, tail):
      aux = pt2
      pt2 = pt3
      pt3 = aux
    
    dCentroid = pt1 - centroid
    dHead = head - centroid
    if distancesquare(centroid,pt1) &gt; 1:
      cossim = cossimilarity(dCentroid,dHead)
      history = history + 0.2*cossim
    else:
      history = 1

    if history &lt; 0:
      aux = pt2
      pt2 = pt3
      pt3 = aux

    centroid = pt1
    head = pt2
    tail = pt3

    return head</ipy:Script>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p2:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="5" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="4" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>CalculateOrientation</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

@returns(float)
def process(value):
    centroid = value.Item1
    head = value.Item2
    orientation = angleline(centroid,head)
    return float(orientation)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Orientation)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Head)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Head</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:CreatePoint2f">
                      <cv:X>0</cv:X>
                      <cv:Y>0</cv:Y>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:ConvertColor">
                      <cv:Conversion>Gray2Bgra</cv:Conversion>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:HeadVisualizer" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:MaskPolygon">
                      <cv:Regions>
                        <cv:ArrayOfPoint>
                          <cv:Point>
                            <cv:X>333</cv:X>
                            <cv:Y>25</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>370</cv:X>
                            <cv:Y>25</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>370</cv:X>
                            <cv:Y>55</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>333</cv:X>
                            <cv:Y>55</cv:Y>
                          </cv:Point>
                        </cv:ArrayOfPoint>
                      </cv:Regions>
                      <cv:MaskType>ToZero</cv:MaskType>
                      <cv:FillValue>
                        <cv:Val0>0</cv:Val0>
                        <cv:Val1>0</cv:Val1>
                        <cv:Val2>0</cv:Val2>
                        <cv:Val3>0</cv:Val3>
                      </cv:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>105</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>Binary</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>150</cv:MinArea>
                      <cv:MaxArea>10000</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Area</Selector>
                  </Expression>
                  <Expression xsi:type="GreaterThan">
                    <Operand xsi:type="DoubleProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as RedLED)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedLED</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:MaskPolygon">
                      <cv:Regions>
                        <cv:ArrayOfPoint>
                          <cv:Point>
                            <cv:X>483</cv:X>
                            <cv:Y>35</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>522</cv:X>
                            <cv:Y>35</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>522</cv:X>
                            <cv:Y>78</cv:Y>
                          </cv:Point>
                          <cv:Point>
                            <cv:X>483</cv:X>
                            <cv:Y>78</cv:Y>
                          </cv:Point>
                        </cv:ArrayOfPoint>
                      </cv:Regions>
                      <cv:MaskType>ToZero</cv:MaskType>
                      <cv:FillValue>
                        <cv:Val0>0</cv:Val0>
                        <cv:Val1>0</cv:Val1>
                        <cv:Val2>0</cv:Val2>
                        <cv:Val3>0</cv:Val3>
                      </cv:FillValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Threshold">
                      <cv:ThresholdValue>105</cv:ThresholdValue>
                      <cv:MaxValue>255</cv:MaxValue>
                      <cv:ThresholdType>Binary</cv:ThresholdType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FindContours">
                      <cv:Mode>External</cv:Mode>
                      <cv:Method>ChainApproxNone</cv:Method>
                      <cv:Offset>
                        <cv:X>0</cv:X>
                        <cv:Y>0</cv:Y>
                      </cv:Offset>
                      <cv:MinArea>250</cv:MinArea>
                      <cv:MaxArea>10000</cv:MaxArea>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:LargestBinaryRegion" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Area</Selector>
                  </Expression>
                  <Expression xsi:type="GreaterThan">
                    <Operand xsi:type="DoubleProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as GreenLED)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenLED</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Frame)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Frame</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>2564</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Framerate</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Divide">
                    <Operand xsi:type="IntProperty">
                      <Value>85</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as ElapsedTimeSec)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>ElapsedTimeSec</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Value.Item1 as Frame,
it.Value.Item2 as Fly,
it.Value.Item3 as Head,
it.Value.Item4 as Orientation,
it.Value.Item5.Item1 as RedLED,
it.Value.Item5.Item2 as GreenLED,
it.Timestamp as TimeTracking,
it.Value.Item6 as TimeAcquisition)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Fly</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="62" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="4" To="54" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="5" To="51" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="7" To="29" Label="Source1" />
                  <Edge From="7" To="32" Label="Source1" />
                  <Edge From="7" To="41" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="11" To="16" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="12" To="30" Label="Source2" />
                  <Edge From="12" To="19" Label="Source1" />
                  <Edge From="13" To="22" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="63" Label="Source2" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="16" To="18" Label="Source1" />
                  <Edge From="17" To="19" Label="Source2" />
                  <Edge From="18" To="19" Label="Source3" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="20" To="30" Label="Source3" />
                  <Edge From="20" To="28" Label="Source1" />
                  <Edge From="21" To="22" Label="Source2" />
                  <Edge From="21" To="26" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="63" Label="Source4" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="63" Label="Source3" />
                  <Edge From="28" To="30" Label="Source4" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="30" To="31" Label="Source1" />
                  <Edge From="32" To="33" Label="Source1" />
                  <Edge From="33" To="34" Label="Source1" />
                  <Edge From="34" To="35" Label="Source1" />
                  <Edge From="35" To="36" Label="Source1" />
                  <Edge From="36" To="37" Label="Source1" />
                  <Edge From="37" To="38" Label="Source1" />
                  <Edge From="38" To="39" Label="Source1" />
                  <Edge From="39" To="40" Label="Source1" />
                  <Edge From="40" To="50" Label="Source1" />
                  <Edge From="41" To="42" Label="Source1" />
                  <Edge From="42" To="43" Label="Source1" />
                  <Edge From="43" To="44" Label="Source1" />
                  <Edge From="44" To="45" Label="Source1" />
                  <Edge From="45" To="46" Label="Source1" />
                  <Edge From="46" To="47" Label="Source1" />
                  <Edge From="47" To="48" Label="Source1" />
                  <Edge From="48" To="49" Label="Source1" />
                  <Edge From="49" To="50" Label="Source2" />
                  <Edge From="50" To="63" Label="Source5" />
                  <Edge From="51" To="52" Label="Source1" />
                  <Edge From="52" To="53" Label="Source1" />
                  <Edge From="53" To="63" Label="Source1" />
                  <Edge From="54" To="55" Label="Source1" />
                  <Edge From="55" To="59" Label="Source1" />
                  <Edge From="56" To="57" Label="Source1" />
                  <Edge From="57" To="58" Label="Source1" />
                  <Edge From="58" To="59" Label="Source2" />
                  <Edge From="59" To="60" Label="Source1" />
                  <Edge From="60" To="61" Label="Source1" />
                  <Edge From="62" To="63" Label="Source6" />
                  <Edge From="63" To="64" Label="Source1" />
                  <Edge From="64" To="65" Label="Source1" />
                  <Edge From="65" To="66" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Stimuli</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Fly</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timer">
                      <rx:DueTime>PT0S</rx:DueTime>
                      <rx:Period>PT0.015S</rx:Period>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

@returns(Tuple[bool,bool])
def process(value):

    # Initiate LEDs
    RedLEDSwitch = value.Item2.RedLEDSwitch
    GreenLEDSwitch = value.Item2.GreenLEDSwitch
    RedLED = bool(False)
    GreenLED = bool(False)

    # Close Loop Input
    FlyX = float(0) #value.Item1.Item3      #Tracked Fly X Coordinate in Millimeters
    FlyY = float(0) #value.Item1.Item4      #Tracked Fly Y Coordinate in Millimeters
    FlyOri = float(0) #value.Item1.Item5    #Tracked Fly Orientation in Radians
    
    # Open Loop Input
    t = value.Item1.Item1         #Elapsed time since the start of the experiment
    frame=value.Item1.Item2.Frame       #Current Frame from current section
    option = value.Item2.LEDOption #Protocol Option for LED (see start)
    fr = value.Item2.Framerate    #framerate of the camera
    duration = value.Item2.TrialDuration #In seconds
      
    # Protocol Algorithm -------------------------------   
    # LED Control
    if (RedLEDSwitch):
      if(option==1):
        time1 = fr*(duration/2)
        if(frame&gt;time1):
          RedLED = bool(True);
    if (GreenLEDSwitch):
      if(option==1):
        time1 = fr*(duration/2)
        if(frame&gt;time1):
          GreenLED = bool(True);
    # In the output we have also value.Item1.Item5 which corresponds to the Low Resolution Frame number
    return Tuple.Create(RedLED,GreenLED)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as RedLED,
it.Item2 as GreenLED)
</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Stim</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>RedLED</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>RedLED</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>GreenLED</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>GreenLED</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source2" />
                  <Edge From="1" To="4" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="6" To="8" Label="Source1" />
                  <Edge From="6" To="10" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Logging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogFly</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Fly_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Fly</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Utilizador\Desktop\test\WhiteRedLEDMax_Fly_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogStim</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Stim_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Stim</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Utilizador\Desktop\test\WhiteRedLEDMax_Stim_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogVideo</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LowResCamera</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_CamL_.avi</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:VideoWriter">
                            <cv:FileName>C:\Users\Utilizador\Desktop\test\WhiteRedLEDMax_CamL_.avi</cv:FileName>
                            <cv:Suffix>FileCount</cv:Suffix>
                            <cv:Buffered>true</cv:Buffered>
                            <cv:Overwrite>false</cv:Overwrite>
                            <cv:FourCC>FMP4</cv:FourCC>
                            <cv:FrameRate>85</cv:FrameRate>
                            <cv:FrameSize>
                              <cv:Width>0</cv:Width>
                              <cv:Height>0</cv:Height>
                            </cv:FrameSize>
                            <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                          </Combinator>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="6" Label="Source1" />
                        <Edge From="1" To="3" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source3" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>LEDArduino</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RedLED</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

# Global Variables (Outputs)
counter = None
outOpt = None#
option = None

@returns(bool)
def process(value):

    #Load Global Variables
    global counter, outOpt, option

    defOpt = value.Item1       
    on = value.Item2.Item1
    off = value.Item2.Item2
    
    if off&gt;0:
      if counter is None:
        outOpt = defOpt
        counter = on
        option = 1
      else:
        if (option == 1 and counter == 0):
          outOpt = bool(False)
          counter = off
          option = 0
        elif (option == 0 and counter == 0):
          outOpt = defOpt
          counter = on
          option = 1
      counter -= 1
      if counter &lt; 0:
        counter = 0
      return outOpt
    else:
      return defOpt
</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ard:DigitalOutput">
                      <ard:PortName>COM4</ard:PortName>
                      <ard:Pin>2</ard:Pin>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GreenLED</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>8</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from System import Tuple

# Global Variables (Outputs)
counter = None
outOpt = None#
option = None

@returns(bool)
def process(value):

    #Load Global Variables
    global counter, outOpt, option

    defOpt = value.Item1       
    on = value.Item2.Item1
    off = value.Item2.Item2

    if counter is None:
      outOpt = defOpt
      counter = on
      option = 1
    else:
      if (option == 1 and counter == 0):
        outOpt = bool(False)
        counter = off
        option = 0
      elif (option == 0 and counter == 0):
        outOpt = defOpt
        counter = on
        option = 1
    counter -= 1
    if counter &lt; 0:
      counter = 0
    return outOpt
</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ard:DigitalOutput">
                      <ard:PortName>COM4</ard:PortName>
                      <ard:Pin>8</ard:Pin>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source1" />
                  <Edge From="1" To="3" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="11" Label="Source1" />
                  <Edge From="8" To="10" Label="Source1" />
                  <Edge From="9" To="10" Label="Source2" />
                  <Edge From="10" To="11" Label="Source2" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>CloseTrial</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timer">
                      <rx:DueTime>PT0S</rx:DueTime>
                      <rx:Period>PT1S</rx:Period>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>TrialDuration</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Count" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Skip">
                      <rx:Count>30</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT2S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>G21 G53 X0 Y0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:SerialStringWrite">
          <io:PortName>MagnetCOM</io:PortName>
          <io:NewLine>\n</io:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>ReturnMagnetHome</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>false</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM4</ard:PortName>
          <ard:Pin>2</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>false</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM4</ard:PortName>
          <ard:Pin>8</ard:Pin>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="10" To="13" Label="Source1" />
      <Edge From="10" To="15" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>