<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p1="clr-namespace:Bonsai.uEye;assembly=Bonsai.uEye"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:p2="clr-namespace:;assembly=Extensions"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns:pal="clr-namespace:Bonsai.PulsePal;assembly=Bonsai.PulsePal"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Camera</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="cv:FileCapture">
                  <cv:FileName>..\resources\VRData\Cam1_1.avi</cv:FileName>
                  <cv:PlaybackRate>85</cv:PlaybackRate>
                  <cv:StartPosition>0</cv:StartPosition>
                  <cv:PositionUnits>Frames</cv:PositionUnits>
                  <cv:Loop>false</cv:Loop>
                  <cv:Playing>true</cv:Playing>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>LowResCamera</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="LowResCam" />
              <Property Name="ConfigFile" DisplayName="LowResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>2</p1:DeviceId>
                <p1:ConfigFile>D:\Miguel\Female\20240610\LowResCamParams.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LowResCamera</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="HighResCam" />
              <Property Name="ConfigFile" DisplayName="HighResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>1</p1:DeviceId>
                <p1:ConfigFile>D:\Miguel\Female\20240610\HighResCamParams.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>HighResCamera</Name>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="cv:FileCapture">
                  <cv:FileName>D:\Philine\20240426W\WhiteGreen_CamL_2.avi</cv:FileName>
                  <cv:PlaybackRate>0</cv:PlaybackRate>
                  <cv:StartPosition>0</cv:StartPosition>
                  <cv:PositionUnits>Frames</cv:PositionUnits>
                  <cv:Loop>false</cv:Loop>
                  <cv:Playing>true</cv:Playing>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>LowResCamera</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="cv:FileCapture">
                  <cv:FileName>D:\Philine\20240426W\WhiteGreen_CamH_2.avi</cv:FileName>
                  <cv:PlaybackRate>0</cv:PlaybackRate>
                  <cv:StartPosition>0</cv:StartPosition>
                  <cv:PositionUnits>Frames</cv:PositionUnits>
                  <cv:Loop>false</cv:Loop>
                  <cv:Playing>true</cv:Playing>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>HighResCamera</Name>
              </Builder>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Transformation Matrixes</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="PX2MM" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>..\resources\Calibration\VRConversions\PX2MM.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>PX2MM</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="MM2VL" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>..\resources\Calibration\VRConversions\MM2VL.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>MM2VL</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:CreateRuntime">
          <py:PythonHome>D:\Filipa\python_bonsai</py:PythonHome>
          <py:ScriptPath>D:\Filipa\python_bonsai\create_runtime_script_bonsai.py</py:ScriptPath>
        </Combinator>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:CreateRuntime">
            <py:PythonHome>C:\Users\Admin\anaconda3\envs\keras_env_january</py:PythonHome>
            <py:ScriptPath>C:\Users\Admin\Desktop\create_runtime_script_bonsai.py</py:ScriptPath>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>Trial</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT18M</rx:DueTime>
                <rx:Period>PT0S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="RootPath" />
              <Property Name="Date" />
              <Property Name="ProtocolName" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>TrialParameters</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="RootPath" />
                    <Property Name="Date" />
                    <Property Name="ProtocolName" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogPaths</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="RootPath" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>C:\Users\Admin\Desktop</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Date" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>290823</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="ProtocolName" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>Darkness</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}{2}{3}</Format>
                          <Selector>Item1,Item2,Item3,Item4</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="7" To="13" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="13" Label="Source2" />
                        <Edge From="10" To="13" Label="Source3" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source4" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Tracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LowResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ExtractBinaryRegion</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:Grayscale" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:BackgroundSubtraction">
                            <cv:BackgroundFrames>100</cv:BackgroundFrames>
                            <cv:AdaptationRate>0</cv:AdaptationRate>
                            <cv:ThresholdValue>40</cv:ThresholdValue>
                            <cv:ThresholdType>Binary</cv:ThresholdType>
                            <cv:SubtractionMethod>Dark</cv:SubtractionMethod>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:FindContours">
                            <cv:Mode>External</cv:Mode>
                            <cv:Method>ChainApproxNone</cv:Method>
                            <cv:Offset>
                              <cv:X>0</cv:X>
                              <cv:Y>0</cv:Y>
                            </cv:Offset>
                            <cv:MinArea>10</cv:MinArea>
                            <cv:MaxArea>100</cv:MaxArea>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:LargestBinaryRegion" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p2:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="5" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionExtremes">
                      <cv:Method>MajorAxis</cv:Method>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>FindHead</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

# Global Variables
velocity = None
head = None
tail = None
counter = None
history = None


def distancesquare(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return dx * dx + dy * dy

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

def cossimilarity(pt1,pt2):
  if (dotproduct(pt1,pt1)*dotproduct(pt2,pt2)) == 0:
    return float(1)
  else:
    return float(dotproduct(pt1,pt2)/(math.sqrt(dotproduct(pt1,pt1))*math.sqrt(dotproduct(pt2,pt2))))

def dotproduct(pt1,pt2):
  return pt1.X*pt2.X+pt1.Y*pt2.Y

@returns(Tuple[Point2f])
def process(value):
    #Load Global Variables
    global velocity, head, tail, counter, history
    
    pt1 = value.Item1
    pt2 = value.Item2

    if math.isnan(pt1.X):
      return Tuple.Create(Point2f(float.NaN,float.NaN))
    else:
      if head is None:
        head = pt1
        tail = pt2
        return Tuple.Create(Point2f(float.NaN,float.NaN))
      else:
        # If only one point has been seen
        if velocity is None:
          if distancesquare(pt1, head) &lt; distancesquare(pt1, tail):
            head = pt1
            tail = pt2
          else:
            head = pt2
            tail = pt1
          velocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          history = float(0)
          counter = float(0)
        # If more then one point has been seen
        else:
          bodyOri = Point2f(pt1.X-pt2.X,pt1.Y-pt2.Y)
          if cossimilarity(bodyOri,velocity) &lt; 0:
            aux = pt1
            pt1 = pt2
            pt2 = aux
          instantaneousVelocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          distance = math.sqrt(distancesquare(pt1,head))
          if counter &lt; 8:
            counter += 1
          if distance &gt; 0 and abs(cossimilarity(instantaneousVelocity,velocity)) &gt; 0.2:
            history = (history*(counter-1)/counter)+cossimilarity(instantaneousVelocity,velocity)/counter
            velocity = Point2f(((velocity.X*(counter-1))/counter)+(instantaneousVelocity.X/counter),((velocity.Y*(counter-1))/counter)+(instantaneousVelocity.Y/counter))
          if history &lt; 0:
            counter = float(0)
            history = float(0)
            head = pt2
            tail = pt1
            velocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          else:
            head = pt1
            tail = pt2
          #velocity = instantaneousVelocity
        # Flip Y Axis for cartesian referential normalization
        return Tuple.Create(head)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as Head)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Head</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p2:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="5" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>CalculateOrientation</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

@returns(float)
def process(value):
    centroid = value.Item1
    head = value.Item2
    orientation = angleline(centroid,head)
    return float(orientation)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Orientation)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:MaskPolygon">
                        <cv:Regions>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>72</cv:X>
                              <cv:Y>57</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>72</cv:X>
                              <cv:Y>57</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>72</cv:X>
                              <cv:Y>57</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>72</cv:X>
                              <cv:Y>57</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>376</cv:X>
                              <cv:Y>420</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>376</cv:X>
                              <cv:Y>420</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>376</cv:X>
                              <cv:Y>421</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>376</cv:X>
                              <cv:Y>421</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>1</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>0</cv:X>
                              <cv:Y>1</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>0</cv:X>
                              <cv:Y>467</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>467</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>467</cv:X>
                              <cv:Y>466</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>466</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>311</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>467</cv:X>
                              <cv:Y>311</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>467</cv:X>
                              <cv:Y>1</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>1</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>452</cv:X>
                              <cv:Y>232</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>467</cv:X>
                              <cv:Y>232</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                        </cv:Regions>
                        <cv:MaskType>ToZeroInv</cv:MaskType>
                        <cv:FillValue>
                          <cv:Val0>0</cv:Val0>
                          <cv:Val1>0</cv:Val1>
                          <cv:Val2>0</cv:Val2>
                          <cv:Val3>0</cv:Val3>
                        </cv:FillValue>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:Threshold">
                        <cv:ThresholdValue>20</cv:ThresholdValue>
                        <cv:MaxValue>255</cv:MaxValue>
                        <cv:ThresholdType>Binary</cv:ThresholdType>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:FindContours">
                        <cv:Mode>External</cv:Mode>
                        <cv:Method>ChainApproxNone</cv:Method>
                        <cv:Offset>
                          <cv:X>0</cv:X>
                          <cv:Y>0</cv:Y>
                        </cv:Offset>
                        <cv:MinArea>5</cv:MinArea>
                        <cv:MaxArea>10000</cv:MaxArea>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:LargestBinaryRegion" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="MemberSelector">
                      <Selector>Area</Selector>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GreaterThan">
                      <Operand xsi:type="DoubleProperty">
                        <Value>0</Value>
                      </Operand>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="scr:ExpressionTransform">
                      <scr:Name>Rename Var</scr:Name>
                      <scr:Expression>New(
it as GreenLED)</scr:Expression>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="MemberSelector">
                      <Selector>GreenLED</Selector>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HighResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:HeadVisualizer" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Value.Item1.Item1.Item2 as LowResFrame,
it.Value.Item1.Item2 as HighResFrame,
it.Value.Item2 as Centroid,
it.Value.Item3 as Head,
it.Value.Item4 as Orientation,
it.Timestamp as TimeTracking,
it.Value.Item5 as TimeLowRes)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Head.X</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>it.toString()</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Fly</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Skip">
                      <rx:Count>200</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="py:Set">
                      <py:VariableName>coords</py:VariableName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="py:Eval">
                      <py:Expression>calculate_velocities(coords)</py:Expression>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Saccade)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Saccade</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Convert to Str</scr:Name>
                    <scr:Description />
                    <scr:Expression>it.toString()</scr:Expression>
                  </Expression>
                  <Expression xsi:type="Parse">
                    <Pattern>%f</Pattern>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:Merge" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:TimeInterval" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="MemberSelector">
                      <Selector>Interval.Milliseconds</Selector>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Stance</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="GreaterThan">
                                <Operand xsi:type="FloatProperty">
                                  <Value>0.75</Value>
                                </Operand>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="BooleanProperty">
                            <Value>true</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Name>Condition</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="LessThanOrEqual">
                                <Operand xsi:type="FloatProperty">
                                  <Value>0.75</Value>
                                </Operand>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="BooleanProperty">
                            <Value>false</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Name>Condition</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="scr:ExpressionTransform">
                                <scr:Expression>Double.IsNaN(it) ? True : False</scr:Expression>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="BooleanProperty">
                            <Value>false</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="0" To="3" Label="Source1" />
                        <Edge From="0" To="5" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="7" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="7" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source3" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Stance Detection</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="ard:DigitalOutput">
                      <ard:PortName>COM3</ard:PortName>
                      <ard:Pin>10</ard:Pin>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:Zip" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="rx:BehaviorSubject">
                      <Name>Prediction</Name>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="py:Get" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>MM2VL</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="34" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="2" To="32" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="5" To="31" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="6" To="19" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="7" To="10" Label="Source1" />
                  <Edge From="8" To="32" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="15" Label="Source1" />
                  <Edge From="9" To="35" Label="Source2" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="32" Label="Source3" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source2" />
                  <Edge From="14" To="35" Label="Source3" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="35" Label="Source4" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="30" To="31" Label="Source2" />
                  <Edge From="31" To="35" Label="Source1" />
                  <Edge From="32" To="33" Label="Source1" />
                  <Edge From="34" To="35" Label="Source5" />
                  <Edge From="35" To="36" Label="Source1" />
                  <Edge From="36" To="37" Label="Source1" />
                  <Edge From="37" To="38" Label="Source1" />
                  <Edge From="37" To="41" Label="Source1" />
                  <Edge From="38" To="39" Label="Source1" />
                  <Edge From="38" To="48" Label="Source1" />
                  <Edge From="39" To="40" Label="Source1" />
                  <Edge From="41" To="42" Label="Source1" />
                  <Edge From="42" To="43" Label="Source1" />
                  <Edge From="43" To="44" Label="Source1" />
                  <Edge From="44" To="45" Label="Source1" />
                  <Edge From="45" To="46" Label="Source1" />
                  <Edge From="46" To="47" Label="Source1" />
                  <Edge From="47" To="48" Label="Source2" />
                  <Edge From="47" To="51" Label="Source1" />
                  <Edge From="47" To="54" Label="Source1" />
                  <Edge From="48" To="49" Label="Source1" />
                  <Edge From="49" To="50" Label="Source1" />
                  <Edge From="51" To="52" Label="Source1" />
                  <Edge From="52" To="53" Label="Source1" />
                  <Edge From="54" To="55" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="GroupWorkflow">
                <Name>Pulsepal</Name>
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>Fly</Name>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>Centroid</Selector>
                    </Expression>
                    <Expression xsi:type="GroupWorkflow">
                      <Name>ConvertToProjectionUnits</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="WorkflowInput">
                            <Name>Source1</Name>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>X</Selector>
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Name>ToFloat</scr:Name>
                            <scr:Expression>Single(it)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>Y</Selector>
                          </Expression>
                          <Expression xsi:type="scr:ExpressionTransform">
                            <scr:Name>ToFloat</scr:Name>
                            <scr:Expression>Single(it)</scr:Expression>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>MM2VL</Name>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:WithLatestFrom" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="p2:UnitTransform" />
                          </Expression>
                          <Expression xsi:type="ipy:PythonTransform">
                            <ipy:Name>ConvertToPoint2f</ipy:Name>
                            <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2+0.1)</ipy:Script>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="1" Label="Source1" />
                          <Edge From="0" To="3" Label="Source1" />
                          <Edge From="1" To="2" Label="Source1" />
                          <Edge From="2" To="5" Label="Source1" />
                          <Edge From="3" To="4" Label="Source1" />
                          <Edge From="4" To="5" Label="Source2" />
                          <Edge From="5" To="7" Label="Source1" />
                          <Edge From="6" To="7" Label="Source2" />
                          <Edge From="7" To="8" Label="Source1" />
                          <Edge From="8" To="9" Label="Source1" />
                          <Edge From="9" To="10" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>X</Selector>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="pal:SetFixedVoltage">
                        <pal:PortName>COM4</pal:PortName>
                        <pal:Channels>2</pal:Channels>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>Y</Selector>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="pal:SetFixedVoltage">
                        <pal:PortName>COM4</pal:PortName>
                        <pal:Channels>1</pal:Channels>
                      </Combinator>
                    </Expression>
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                    <Edge From="1" To="2" Label="Source1" />
                    <Edge From="2" To="3" Label="Source1" />
                    <Edge From="2" To="5" Label="Source1" />
                    <Edge From="3" To="4" Label="Source1" />
                    <Edge From="5" To="6" Label="Source1" />
                  </Edges>
                </Workflow>
              </Builder>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Logging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>LogFly</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>SessionPath</Name>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="StringProperty">
                              <Value>_Fly_.csv</Value>
                            </Combinator>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Format">
                            <Format>{0}{1}</Format>
                            <Selector>Item1,Item2</Selector>
                          </Expression>
                          <Expression xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="FileName" />
                            </PropertyMappings>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>Fly</Name>
                          </Expression>
                          <Expression xsi:type="io:CsvWriter">
                            <io:FileName>C:\Users\Admin\Desktop\290823\Darkness_Fly_.csv</io:FileName>
                            <io:Append>false</io:Append>
                            <io:Overwrite>false</io:Overwrite>
                            <io:Suffix>FileCount</io:Suffix>
                            <io:IncludeHeader>true</io:IncludeHeader>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="SubscribeSubject">
                              <Name>SessionPath</Name>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="Combinator">
                              <Combinator xsi:type="StringProperty">
                                <Value>_Fly_.csv</Value>
                              </Combinator>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="Combinator">
                              <Combinator xsi:type="rx:Zip" />
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="Format">
                              <Format>{0}{1}</Format>
                              <Selector>Item1,Item2</Selector>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="PropertyMapping">
                              <PropertyMappings>
                                <Property Name="FileName" />
                              </PropertyMappings>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="SubscribeSubject">
                              <Name>Prediction</Name>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="Disable">
                            <Builder xsi:type="io:CsvWriter">
                              <io:FileName>C:\Users\Administrador\Desktop\230823\Darkness_Fly_.csv</io:FileName>
                              <io:Append>false</io:Append>
                              <io:Overwrite>false</io:Overwrite>
                              <io:Suffix>Timestamp</io:Suffix>
                              <io:IncludeHeader>true</io:IncludeHeader>
                            </Builder>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>Stance Detection</Name>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>LowResCamera</Name>
                          </Expression>
                          <Expression xsi:type="MemberSelector">
                            <Selector>IsInvalid</Selector>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Merge" />
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:TimeInterval" />
                          </Expression>
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="2" Label="Source2" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="3" To="4" Label="Source1" />
                          <Edge From="4" To="6" Label="Source1" />
                          <Edge From="5" To="6" Label="Source2" />
                          <Edge From="7" To="9" Label="Source1" />
                          <Edge From="8" To="9" Label="Source2" />
                          <Edge From="9" To="10" Label="Source1" />
                          <Edge From="10" To="11" Label="Source1" />
                          <Edge From="11" To="13" Label="Source1" />
                          <Edge From="12" To="13" Label="Source2" />
                          <Edge From="14" To="17" Label="Source1" />
                          <Edge From="15" To="16" Label="Source1" />
                          <Edge From="16" To="17" Label="Source2" />
                          <Edge From="17" To="18" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>LogVideo</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>LowResCamera</Name>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>SessionPath</Name>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="StringProperty">
                              <Value>_CamL_.avi</Value>
                            </Combinator>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Format">
                            <Format>{0}{1}</Format>
                            <Selector>Item1,Item2</Selector>
                          </Expression>
                          <Expression xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="FileName" />
                            </PropertyMappings>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="cv:VideoWriter">
                              <cv:FileName>C:\Users\Administrador\Desktop\230823\Darkness_CamL_.avi</cv:FileName>
                              <cv:Suffix>FileCount</cv:Suffix>
                              <cv:Buffered>true</cv:Buffered>
                              <cv:Overwrite>false</cv:Overwrite>
                              <cv:FourCC>FMP4</cv:FourCC>
                              <cv:FrameRate>85</cv:FrameRate>
                              <cv:FrameSize>
                                <cv:Width>0</cv:Width>
                                <cv:Height>0</cv:Height>
                              </cv:FrameSize>
                              <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                            </Combinator>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>HighResCamera</Name>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>SessionPath</Name>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="StringProperty">
                              <Value>_CamH_.avi</Value>
                            </Combinator>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="Format">
                            <Format>{0}{1}</Format>
                            <Selector>Item1,Item2</Selector>
                          </Expression>
                          <Expression xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="FileName" />
                            </PropertyMappings>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="cv:VideoWriter">
                              <cv:FileName>C:\Users\Administrador\Desktop\230823\Darkness_CamH_.avi</cv:FileName>
                              <cv:Suffix>FileCount</cv:Suffix>
                              <cv:Buffered>true</cv:Buffered>
                              <cv:Overwrite>false</cv:Overwrite>
                              <cv:FourCC>FMP4</cv:FourCC>
                              <cv:FrameRate>85</cv:FrameRate>
                              <cv:FrameSize>
                                <cv:Width>0</cv:Width>
                                <cv:Height>0</cv:Height>
                              </cv:FrameSize>
                              <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                            </Combinator>
                          </Expression>
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="6" Label="Source1" />
                          <Edge From="1" To="3" Label="Source1" />
                          <Edge From="2" To="3" Label="Source2" />
                          <Edge From="3" To="4" Label="Source1" />
                          <Edge From="4" To="5" Label="Source1" />
                          <Edge From="5" To="6" Label="Source3" />
                          <Edge From="7" To="13" Label="Source1" />
                          <Edge From="8" To="10" Label="Source1" />
                          <Edge From="9" To="10" Label="Source2" />
                          <Edge From="10" To="11" Label="Source1" />
                          <Edge From="11" To="12" Label="Source1" />
                          <Edge From="12" To="13" Label="Source2" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>