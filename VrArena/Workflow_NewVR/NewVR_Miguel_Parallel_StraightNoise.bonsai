<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p1="clr-namespace:Bonsai.uEye;assembly=Bonsai.uEye"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p2="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:p3="clr-namespace:;assembly=Extensions"
                 xmlns:pal="clr-namespace:Bonsai.PulsePal;assembly=Bonsai.PulsePal"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Camera</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="cv:FileCapture">
                  <cv:FileName>..\resources\VRData\Cam1_1.avi</cv:FileName>
                  <cv:PlaybackRate>85</cv:PlaybackRate>
                  <cv:StartPosition>0</cv:StartPosition>
                  <cv:PositionUnits>Frames</cv:PositionUnits>
                  <cv:Loop>false</cv:Loop>
                  <cv:Playing>true</cv:Playing>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>LowResCamera</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="LowResCam" />
              <Property Name="ConfigFile" DisplayName="LowResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>2</p1:DeviceId>
                <p1:ConfigFile>C:\Users\Concave VR\Desktop\LowResCamParams.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LowResCamera</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DeviceId" DisplayName="HighResCam" />
              <Property Name="ConfigFile" DisplayName="HighResConfig" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p1:uEyeCapture">
                <p1:DeviceId>1</p1:DeviceId>
                <p1:ConfigFile>C:\Users\Concave VR\Desktop\HighResCamParams.ini</p1:ConfigFile>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Image</Selector>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>HighResCamera</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Screen</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DisplayDevice" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:CreateWindow">
                <gl:Width>800</gl:Width>
                <gl:Height>800</gl:Height>
                <gl:VSync>Off</gl:VSync>
                <gl:SwapSync>false</gl:SwapSync>
                <gl:ClearColor>White</gl:ClearColor>
                <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
                <gl:CursorVisible>true</gl:CursorVisible>
                <gl:Location xsi:nil="true" />
                <gl:WindowBorder>Fixed</gl:WindowBorder>
                <gl:WindowState>Normal</gl:WindowState>
                <gl:DisplayDevice>First</gl:DisplayDevice>
                <gl:TargetRenderFrequency>60</gl:TargetRenderFrequency>
                <gl:TargetUpdateFrequency>85</gl:TargetUpdateFrequency>
                <gl:RenderState />
                <gl:GraphicsMode>
                  <gl:ColorFormat>
                    <gl:Red>8</gl:Red>
                    <gl:Green>8</gl:Green>
                    <gl:Blue>8</gl:Blue>
                    <gl:Alpha>8</gl:Alpha>
                  </gl:ColorFormat>
                  <gl:Depth>16</gl:Depth>
                  <gl:Stencil>0</gl:Stencil>
                  <gl:Samples>0</gl:Samples>
                  <gl:AccumulatorFormat>
                    <gl:Red>0</gl:Red>
                    <gl:Green>0</gl:Green>
                    <gl:Blue>0</gl:Blue>
                    <gl:Alpha>0</gl:Alpha>
                  </gl:AccumulatorFormat>
                  <gl:Buffers>2</gl:Buffers>
                  <gl:Stereo>false</gl:Stereo>
                </gl:GraphicsMode>
              </Combinator>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:TextureResources">
                <gl:Textures>
                  <gl:TextureConfiguration xsi:type="gl:ImageTexture">
                    <gl:Name>house</gl:Name>
                    <gl:Width xsi:nil="true" />
                    <gl:Height xsi:nil="true" />
                    <gl:InternalFormat>Rgba</gl:InternalFormat>
                    <gl:WrapS>Repeat</gl:WrapS>
                    <gl:WrapT>Repeat</gl:WrapT>
                    <gl:MinFilter>Linear</gl:MinFilter>
                    <gl:MagFilter>Linear</gl:MagFilter>
                    <gl:FileName>..\resources\house.jpg</gl:FileName>
                    <gl:ColorType>Unchanged</gl:ColorType>
                    <gl:FlipMode>Vertical</gl:FlipMode>
                  </gl:TextureConfiguration>
                </gl:Textures>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="res:LoadResources" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:RenderFrame" />
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
              <Left>-1</Left>
              <Right>1</Right>
              <Bottom>-1</Bottom>
              <Top>1</Top>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Draw</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Photodiode</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:CreateSerialPort">
                <io:Name>ComPortPhoto</io:Name>
                <io:PortName>COM3</io:PortName>
                <io:BaudRate>115200</io:BaudRate>
                <io:Parity>None</io:Parity>
                <io:ParityReplace>63</io:ParityReplace>
                <io:DataBits>8</io:DataBits>
                <io:StopBits>One</io:StopBits>
                <io:Handshake>None</io:Handshake>
                <io:DiscardNull>false</io:DiscardNull>
                <io:DtrEnable>false</io:DtrEnable>
                <io:RtsEnable>false</io:RtsEnable>
                <io:ReadBufferSize>4096</io:ReadBufferSize>
                <io:WriteBufferSize>2048</io:WriteBufferSize>
                <io:ReceivedBytesThreshold>1</io:ReceivedBytesThreshold>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0S</rx:DueTime>
                <rx:Period>PT0.001S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>REQ</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:SerialStringWrite">
                <io:PortName>ComPortPhoto</io:PortName>
                <io:NewLine>\r\n</io:NewLine>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:SerialStringRead">
                <io:PortName>ComPortPhoto</io:PortName>
                <io:NewLine>\r\n</io:NewLine>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="NotEqual">
                    <Operand xsi:type="StringProperty">
                      <Value>E</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Parse">
              <Pattern>%i</Pattern>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>PhotoValue</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Transformation Matrixes</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="PX2MM" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\Users\Concave VR\Desktop\VRConversions\PX2MM.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>PX2MM</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="MM2VL" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\Users\Concave VR\Desktop\VRConversions\MM2VL.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>MM2VL</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="FileName" DisplayName="MM2VR" />
            </Expression>
            <Expression xsi:type="io:CsvReader">
              <io:FileName>C:\Users\Concave VR\Desktop\VRConversions\MM2VR.txt</io:FileName>
              <io:ListSeparator />
              <io:ScanPattern>%f,%f,%f</io:ScanPattern>
              <io:SkipRows>0</io:SkipRows>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>ForEachLine</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item3</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ToArray" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>MM2VR</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>GenerateProtocolSequence</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="DateTimeProperty">
                <Value>0001-01-01T00:00:00</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:CreateDiscreteUniform">
                <p2:Lower>0</p2:Lower>
                <p2:Upper>2</p2:Upper>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p2:SampleDistinct">
                <p2:Count>3</p2:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="NoiseLvl3" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="NoiseLvl2" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="NoiseLvl1" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>1</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>2</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>2</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="3" To="9" Label="Source1" />
            <Edge From="3" To="11" Label="Source1" />
            <Edge From="4" To="8" Label="Source1" />
            <Edge From="5" To="12" Label="Source2" />
            <Edge From="6" To="10" Label="Source2" />
            <Edge From="7" To="8" Label="Source2" />
            <Edge From="8" To="13" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="13" Label="Source2" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source3" />
            <Edge From="13" To="14" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>3</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:CreateObservable">
        <Name>Trial</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT30S</rx:DueTime>
                <rx:Period>PT0S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="NoiseLvl" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Speed (mm/s)" />
              <Property Name="TurnRadius (mm)" />
              <Property Name="StraightLength (mm)" />
              <Property Name="Direction (1 or -1)" />
              <Property Name="StimDiameter (mm)" />
              <Property Name="NoFlashFrames" />
              <Property Name="Date" />
              <Property Name="RootPath" />
              <Property Name="ProtocolName" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>TrialParameters</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Speed (mm/s)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>20</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="TurnRadius (mm)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>12.5</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="StraightLength (mm)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>25</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="Direction (1 or -1)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="StimDiameter (mm)" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>1.56</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="NoFlashFrames" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>60</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Value" DisplayName="NoiseLvl" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>2</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as Speed,
it.Item2 as TurnRadius,
it.Item3 as StraightLength,
it.Item4 as Direction,
it.Item5 as Diameter,
it.Item6 as NoFlashFrames,
it.Item7 as NoiseLvl)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="RootPath" />
                    <Property Name="Date" />
                    <Property Name="ProtocolName" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogPaths</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="RootPath" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>C:\Users\Concave VR\Desktop</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="Date" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>teste</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RootPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>\</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="ProtocolName" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>Parallel_StraightNoise</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Params</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>NoiseLvl</Selector>
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}mm</Format>
                          <Selector>it</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}{2}{3}{4}</Format>
                          <Selector>Item1,Item2,Item3,Item4,Item5</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="16" Label="Source2" />
                        <Edge From="9" To="16" Label="Source1" />
                        <Edge From="10" To="16" Label="Source3" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="16" Label="Source4" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source5" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="14" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="14" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="14" Label="Source3" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="14" Label="Source4" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="14" Label="Source5" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="14" Label="Source6" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source7" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Tracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LowResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ExtractBinaryRegion</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:Grayscale" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:BackgroundSubtraction">
                            <cv:BackgroundFrames>100</cv:BackgroundFrames>
                            <cv:AdaptationRate>0</cv:AdaptationRate>
                            <cv:ThresholdValue>40</cv:ThresholdValue>
                            <cv:ThresholdType>Binary</cv:ThresholdType>
                            <cv:SubtractionMethod>Dark</cv:SubtractionMethod>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:FindContours">
                            <cv:Mode>External</cv:Mode>
                            <cv:Method>ChainApproxNone</cv:Method>
                            <cv:Offset>
                              <cv:X>0</cv:X>
                              <cv:Y>0</cv:Y>
                            </cv:Offset>
                            <cv:MinArea>10</cv:MinArea>
                            <cv:MaxArea>100</cv:MaxArea>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:LargestBinaryRegion" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:BinaryRegionExtremes">
                      <cv:Method>MajorAxis</cv:Method>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>FindHead</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

# Global Variables
velocity = None
head = None
tail = None
counter = None
history = None


def distancesquare(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return dx * dx + dy * dy

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

def cossimilarity(pt1,pt2):
  if (dotproduct(pt1,pt1)*dotproduct(pt2,pt2)) == 0:
    return float(1)
  else:
    return float(dotproduct(pt1,pt2)/(math.sqrt(dotproduct(pt1,pt1))*math.sqrt(dotproduct(pt2,pt2))))

def dotproduct(pt1,pt2):
  return pt1.X*pt2.X+pt1.Y*pt2.Y

@returns(Tuple[Point2f])
def process(value):
    #Load Global Variables
    global velocity, head, tail, counter, history
    
    pt1 = value.Item1
    pt2 = value.Item2

    if math.isnan(pt1.X):
      return Tuple.Create(Point2f(float.NaN,float.NaN))
    else:
      if head is None:
        head = pt1
        tail = pt2
        return Tuple.Create(Point2f(float.NaN,float.NaN))
      else:
        # If only one point has been seen
        if velocity is None:
          if distancesquare(pt1, head) &lt; distancesquare(pt1, tail):
            head = pt1
            tail = pt2
          else:
            head = pt2
            tail = pt1
          velocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          history = float(0)
          counter = float(0)
        # If more then one point has been seen
        else:
          bodyOri = Point2f(pt1.X-pt2.X,pt1.Y-pt2.Y)
          if cossimilarity(bodyOri,velocity) &lt; 0:
            aux = pt1
            pt1 = pt2
            pt2 = aux
          instantaneousVelocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          distance = math.sqrt(distancesquare(pt1,head))
          if counter &lt; 8:
            counter += 1
          if distance &gt; 0 and abs(cossimilarity(instantaneousVelocity,velocity)) &gt; 0.2:
            history = (history*(counter-1)/counter)+cossimilarity(instantaneousVelocity,velocity)/counter
            velocity = Point2f(((velocity.X*(counter-1))/counter)+(instantaneousVelocity.X/counter),((velocity.Y*(counter-1))/counter)+(instantaneousVelocity.Y/counter))
          if history &lt; 0:
            counter = float(0)
            history = float(0)
            head = pt2
            tail = pt1
            velocity = Point2f(pt1.X-head.X,pt1.Y-head.Y)
          else:
            head = pt1
            tail = pt2
          #velocity = instantaneousVelocity
        # Flip Y Axis for cartesian referential normalization
        return Tuple.Create(head)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as Head)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Head</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p3:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="5" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="4" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToMm</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>PX2MM</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p3:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="5" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="2" To="4" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>CalculateOrientation</ipy:Name>
                    <ipy:Script>import math
import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f
from System import Single, Tuple

def angleline(pt1,pt2):
  dx = (pt2.X - pt1.X)
  dy = (pt2.Y - pt1.Y)
  return math.atan2(dy, dx)

@returns(float)
def process(value):
    centroid = value.Item1
    head = value.Item2
    orientation = angleline(centroid,head)
    return float(orientation)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it as Orientation)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HighResCamera</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>1</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p3:HeadVisualizer" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Value.Item1.Item1.Item2 as LowResFrame,
it.Value.Item1.Item2 as HighResFrame,
it.Value.Item2 as Centroid,
it.Value.Item3 as Head,
it.Value.Item4 as Orientation,
it.Timestamp as TimeTracking,
it.Value.Item5 as TimeLowRes)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Fly</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="25" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="23" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="5" To="22" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="7" To="13" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="11" To="23" Label="Source3" />
                  <Edge From="12" To="26" Label="Source3" />
                  <Edge From="12" To="15" Label="Source2" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="13" To="23" Label="Source2" />
                  <Edge From="14" To="26" Label="Source2" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="26" Label="Source4" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source2" />
                  <Edge From="22" To="26" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="25" To="26" Label="Source5" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="28" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Pulsepal</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Fly</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Centroid</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToProjectionUnits</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>MM2VL</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p3:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2+0.1)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="7" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="4" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="6" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>X</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="pal:SetFixedVoltage">
                      <pal:PortName>COM4</pal:PortName>
                      <pal:Channels>2</pal:Channels>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Y</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="pal:SetFixedVoltage">
                      <pal:PortName>COM4</pal:PortName>
                      <pal:Channels>1</pal:Channels>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Stimuli</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Fly</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Draw</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Elapsed Time Calculator</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Timestamp</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Subtract" />
                        <Expression xsi:type="MemberSelector">
                          <Selector>TotalSeconds</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="3" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.Centroid.X</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.Centroid.Y</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.Orientation</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.LowResFrame</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Timestamp</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>Protocol</ipy:Name>
                    <ipy:Script>import math
from random import random
from System import Tuple

# Global Variables (Outputs)
StimX = None                #Stimulus X Coordinate in Millimeters
StimY = None                #Stimulus Y Coordinate in Millimeters
StimOri = None              #Stimulus Orientation in Radians
state = None                #Stimulus State

# State Legend
# 99 - Initiation (Close Loop With Fly Center of Mass and Orientation)
# 0 - Straight Section
# -1/1 - Curved Section (signal indicates direction of the turn - left vs right)

# Global Protocol Variables
n = None                    #Counter for the amount straight steps the stimulus needs to do before entering a curved section(if this number is not whole it is corrected on the first step of the curved section)
m = None                    #Counter for the amount curved steps the stimulus needs to do before entering a straight section(if this number is not whole it is corrected on the first step of the straight section)
sign_straight = None        #Used to shift directions during the straight sections
sign_curve = None           #Used to shift rotation direction during the curves
switch = None               #Used to add or not pi to the angle used to determine the curved section stimulus position (1 adds pi / -1 does not add pi)
switch_counter = None       #Used to countdown the number of curved sections before the switch changes
yi = None                   #Sets the initial stimulus y coordinate for the curved sections. Important since the the position of the target during the curved sections is done relative to the initial position
ti = None                   #Saves Previous Time Point to Process dt
dt = None                   #Interval of time since last projected frame
bias = None                 
counter = None

@returns(Tuple[float,float,float,float,float])
def process(value):
    #Load Global Variables
    global StimX, StimY, StimOri, n, m, state, sign_straight, sign_curve, switch, switch_counter, yi, ti, dt, counter, bias
    
    # Close Loop Input
    FlyX = value.Item1.Item3      #Tracked Fly X Coordinate in Millimeters
    FlyY = value.Item1.Item4      #Tracked Fly Y Coordinate in Millimeters
    FlyOri = value.Item1.Item5    #Tracked Fly Orientation in Radians
    
    # Open Loop Input
    t = value.Item1.Item1         #Elapsed time since the start of the experiment
      
    # Protocol Specific Inputs
    speed=value.Item2.Speed       #Stimulus speed in Millimeters/Second
    r=value.Item2.TurnRadius      #Radius of the curved section
    l=value.Item2.StraightLength  #Length of the straight section
    sign=value.Item2.Direction    #Global direction (changes the entire protocol direction to the mirror image)
    noiselvl = value.Item2.NoiseLvl       #Stimulus speed in Millimeters/Second

    # Protocol Algorithm -------------------------------   
    if ti is None:
      ti = t
      counter = 0
      dt = 0
      return Tuple.Create(float(value.Item1.Item2),float.NaN,float.NaN,float.NaN,float.NaN)
    else:
      # Time Interval
      if counter &lt; 10:
        counter += 1
      dt = (dt*(counter-1)/counter)+(t - ti)/counter  #makes dt a pseudo-average insted of the actual interval
      #dt = t - ti                   
      ti = t
      # Protocol Constants
      dd = speed*dt                 #Amount of distance traveled by the stimulus in between projection frames
      halfl = l/2                   #Half of the length of the straight path (Used to keep the protocol centered and to know the starting X protision of the curved sections)     
      halfc = math.pi*r             #Perimeter of half a circle
      k = halfc/dd                  #Number of steps required to travel along the half circle perimeter
      # Protocol Logic
      bias = 0 * noiselvl
      if t &lt; 5:
        StimX = FlyX
        StimY = FlyY
        StimOri = FlyOri
        sign_straight = 1
        sign_curve = 1
        switch = -1
        switch_counter = 0
        state = 99
        n = None
      else:
        PrevX = StimX             #Saves Previous X value for the stimulus
        PrevY = StimY             #Saves Previous Y value for the stimulus
        if n is None:
          StimX = -sign*halfl
          StimY = 0
          n = l/dd
          m = 0
          state = 0
        elif (state==0 and n&gt;=1): 
          StimX += sign*sign_straight*dd
          bias = noiselvl * random()
          n -= 1
        elif (n&lt;1 and (m+1)&lt;k):
          if m==0:
            m = (1-n)
            state = sign_curve*1
            yi = StimY
          else:
            m += 1
          vangle = sign_curve*(((1-m/k)*math.pi/2) + (1+switch)*math.pi/2)
          vlength = 2*r*math.sin((m/k)*math.pi/2) 
          StimX = sign*(sign_straight*halfl + vlength*math.sin(vangle))
          StimY = yi + vlength*math.cos(vangle)
        elif ((m+1)&gt;k):
          StimX = sign*sign_straight*(halfl - (1-(m+1-k))*dd)
          n = l/dd - (m+1-k)
          m = 0
          sign_straight = -sign_straight
          if (switch_counter==0):
            switch = -switch
            switch_counter = 2
          elif (switch_counter==1):
            sign_curve = -sign_curve
          switch_counter -= 1
          state = 0
        StimOri = math.atan2(StimY-PrevY, StimX-PrevX)
      # In the output we have also value.Item1.Item5 which corresponds to the Low Resolution Frame number
      return Tuple.Create(float(value.Item1.Item2),float(StimX),float(StimY+bias),float(StimOri),float(state))</ipy:Script>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1 as Draw,
it.Item2.Item1 as LowResFrame,
it.Item2.Item2 as X,
it.Item2.Item3 as Y,
it.Item2.Item4 as Orientation,
it.Item2.Item5 as State,
it.Item3 as TimeDraw)
</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Stim</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source2" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="2" To="12" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="4" To="7" Label="Source1" />
                  <Edge From="4" To="8" Label="Source1" />
                  <Edge From="4" To="9" Label="Source1" />
                  <Edge From="4" To="10" Label="Source1" />
                  <Edge From="4" To="16" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="11" Label="Source1" />
                  <Edge From="7" To="11" Label="Source3" />
                  <Edge From="8" To="11" Label="Source4" />
                  <Edge From="9" To="11" Label="Source5" />
                  <Edge From="10" To="11" Label="Source2" />
                  <Edge From="11" To="14" Label="Source1" />
                  <Edge From="12" To="17" Label="Source3" />
                  <Edge From="13" To="14" Label="Source2" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="17" Label="Source2" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Projection</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Stim</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Draw</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>PhotoValue</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Diameter</Selector>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>RescaleDiameterToVR</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>MM2VR</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p3:ScaleToVR" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Diameter" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>NoFlashFrames</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>60</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Params</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Speed</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Name>PhotodiodeFlash</ipy:Name>
                    <ipy:Script># Global Variables (Outputs)
PhotoSwitch = None                #Transparency Switch (1 - not transparent; 0  transparent
PhotoCounter = None               #Number of Projections frames to ignore before switch activation
Trial = None

@returns(float)
def process(value):
    #Load Global Variables
    global PhotoSwitch, PhotoCounter, Trial

    if Trial is not None:
      if Trial != value.Item2:
        PhotoCounter = None
    Trial = value.Item2

    if PhotoCounter is None:
      PhotoCounter = value.Item1
      Switch = 1
    if PhotoCounter &gt; 0:
      PhotoSwitch = 1
      PhotoCounter-=1
    else: 
      if PhotoSwitch == 1:
        PhotoSwitch = 0
      elif PhotoSwitch == 0:
        PhotoSwitch = 1
    return PhotoSwitch</ipy:Script>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="ColorA" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawCircle.bonsai">
                    <LocationX>1</LocationX>
                    <LocationY>-1</LocationY>
                    <Layer>0</Layer>
                    <Diameter>1</Diameter>
                    <ColorR>0</ColorR>
                    <ColorG>0</ColorG>
                    <ColorB>0</ColorB>
                    <ColorA>1</ColorA>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ConvertToProjectionUnits</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>MM2VR</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>X</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Y</Selector>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Name>ToFloat</scr:Name>
                          <scr:Expression>Single(it)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p3:UnitTransform" />
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Name>ConvertToPoint2f</ipy:Name>
                          <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Point2f

@returns(Point2f)
def process(value):
  return Point2f(value.Item1,value.Item2)</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="7" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="1" To="4" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="6" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>X</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="LocationX" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Y</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="LocationY" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawCircle.bonsai">
                    <LocationX>-0.431107</LocationX>
                    <LocationY>-0.145886153</LocationY>
                    <Layer>0</Layer>
                    <Diameter>0.0473251566</Diameter>
                    <ColorR>0</ColorR>
                    <ColorG>0</ColorG>
                    <ColorB>0</ColorB>
                    <ColorA>1</ColorA>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Timestamp" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Rename Var</scr:Name>
                    <scr:Expression>New(
it.Item1.Value.Item1.LowResFrame as LowResFrame,
it.Item1.Value.Item1.X as X,
it.Item1.Value.Item1.Y as Y,
it.Item1.Value.Item1.Orientation as Orientation,
it.Item1.Value.Item1.State as State,
it.Item1.Value.Item3 as PhotoColor,
it.Item2 as PhotoValue,
it.Item1.Timestamp as TimeProjection,
it.Item1.Value.Item1.TimeDraw as TimeDraw)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>Projection</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="0" To="17" Label="Source1" />
                  <Edge From="0" To="23" Label="Source1" />
                  <Edge From="1" To="22" Label="Source1" />
                  <Edge From="1" To="10" Label="Source2" />
                  <Edge From="1" To="16" Label="Source1" />
                  <Edge From="2" To="25" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="22" Label="Source4" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="13" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source2" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="14" To="23" Label="Source3" />
                  <Edge From="15" To="16" Label="Source2" />
                  <Edge From="16" To="23" Label="Source2" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="17" To="20" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="22" Label="Source2" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source3" />
                  <Edge From="22" To="23" Label="Source4" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Logging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogFly</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Fly_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Fly</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Concave VR\Desktop\teste\Parallel_StraightNoise2mm_Fly_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogStim</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_Stim_.csv</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Projection</Name>
                        </Expression>
                        <Expression xsi:type="io:CsvWriter">
                          <io:FileName>C:\Users\Concave VR\Desktop\teste\Parallel_StraightNoise2mm_Stim_.csv</io:FileName>
                          <io:Append>false</io:Append>
                          <io:Overwrite>false</io:Overwrite>
                          <io:Suffix>FileCount</io:Suffix>
                          <io:IncludeHeader>true</io:IncludeHeader>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source2" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LogVideo</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LowResCamera</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_CamL_.avi</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:VideoWriter">
                            <cv:FileName>C:\Users\Concave VR\Desktop\teste\Parallel_StraightNoise2mm_CamL_.avi</cv:FileName>
                            <cv:Suffix>FileCount</cv:Suffix>
                            <cv:Buffered>true</cv:Buffered>
                            <cv:Overwrite>false</cv:Overwrite>
                            <cv:FourCC>FMP4</cv:FourCC>
                            <cv:FrameRate>85</cv:FrameRate>
                            <cv:FrameSize>
                              <cv:Width>0</cv:Width>
                              <cv:Height>0</cv:Height>
                            </cv:FrameSize>
                            <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="StringProperty">
                            <Value>_CamH_.avi</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>SessionPath</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Format">
                          <Format>{0}{1}</Format>
                          <Selector>Item1,Item2</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FileName" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HighResCamera</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:VideoWriter">
                            <cv:FileName>C:\Users\Concave VR\Desktop\teste\Parallel_StraightNoise2mm_CamH_.avi</cv:FileName>
                            <cv:Suffix>FileCount</cv:Suffix>
                            <cv:Buffered>true</cv:Buffered>
                            <cv:Overwrite>false</cv:Overwrite>
                            <cv:FourCC>FMP4</cv:FourCC>
                            <cv:FrameRate>85</cv:FrameRate>
                            <cv:FrameSize>
                              <cv:Width>0</cv:Width>
                              <cv:Height>0</cv:Height>
                            </cv:FrameSize>
                            <cv:ResizeInterpolation>Linear</cv:ResizeInterpolation>
                          </Combinator>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="6" Label="Source1" />
                        <Edge From="1" To="3" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source3" />
                        <Edge From="7" To="9" Label="Source2" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="13" Label="Source2" />
                        <Edge From="12" To="13" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="6" Label="Source1" />
            <Edge From="5" To="6" Label="Source2" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>